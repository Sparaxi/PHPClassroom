Uitleg over Strings in PHP
We hebben eerder al geoefend met strings en nummers. Nu gaan we dieper in op hoe strings werken in PHP.


Strings en Aanhalingstekens
In PHP kun je strings declareren met dubbele aanhalingstekens (") of enkele aanhalingstekens ('). Er is een belangrijk verschil in hoe ze functioneren:

    Dubbele aanhalingstekens:
    Je kunt variabelen binnen de string gebruiken.
    Voorbeeld:
    <?php
        $x = "world";
        echo "Hello, $x"; // Dit zal "Hello, world" tonen.
    ?>

Enkele aanhalingstekens:
    Variabelen worden niet herkend binnen enkele aanhalingstekens.
    Voorbeeld:
    <?php
        $x = "John";
        echo 'Hello $x'; // Dit zal "Hello $x" tonen.
    ?>

Functies voor Strings
Er zijn verschillende handige functies om met strings te werken:

    Lengte van een string: Gebruik strlen() om de lengte van een string te berekenen.
    <?php
        $str = "Hello";
        echo strlen($str); // Dit geeft 5 terug.
    ?>

    Aantal woorden in een string: Gebruik str_word_count() om te tellen hoeveel woorden er in een string staan.
    <?php
        $text = "Dit is een voorbeeld.";
        echo str_word_count($text); // Dit geeft 4 terug.
    ?>

    Zoeken in een string: Gebruik strpos() om te controleren of een bepaald woord in een string voorkomt.
    <?php
        $haystack = "Hallo, wereld!";
        echo strpos($haystack, "wereld"); // Dit geeft de positie van "wereld" terug.
    ?>

Hoofdletters en kleine letters:

    Zet een string om naar hoofdletters met strtoupper().
    Zet een string om naar kleine letters met strtolower().
    <?php
        echo strtoupper("hallo"); // Geeft "HALLO"
        echo strtolower("HAALLO"); // Geeft "haaloo"
    ?>
String vervangen: Gebruik str_replace() om delen van een string te vervangen.
    <?php
        $string = "Hallo wereld!";
        echo str_replace("wereld", "PHP", $string); // Geeft "Hallo PHP!" terug.
    ?>
String omkeren: Je kunt een string omkeren met strrev().
    <?php
        $text = "Hallo";
        echo strrev($text); // Geeft "ollaH" terug.
    ?>
Spaties verwijderen: Gebruik trim() om spaties aan het begin en einde van een string te verwijderen.
    <?php
        $str = "   Hallo   ";
        echo trim($str); // Geeft "Hallo" terug zonder spaties.
    ?>

In PHP kun je strings combineren (concatenatie) met behulp van de concatenatie-operator (.).
Dit stelt je in staat om meerdere strings samen te voegen tot één enkele string.
    <?php
        $string1 = "Hallo";
        $string2 = "wereld!";
        $resultaat = $string1 . " " . $string2; // Dit zal "Hallo wereld!" tonen.
        echo $resultaat;
    ?>
Je kunt deze techniek gebruiken om variabelen en tekst samen te voegen, wat handig is voor het creëren van dynamische teksten.

Soms heb je speciale tekens nodig binnen een string, zoals aanhalingstekens of nieuwe regels.
In PHP kun je deze speciale tekens invoegen met behulp van escape characters. Een escape character begint met een backslash (\).

Belangrijke Escape Characters:
    \" Voor een dubbele aanhalingstekens binnen een string.
    \' Voor een enkele aanhalingstekens binnen een string.
    \n Voor een nieuwe regel.
    \t Voor een tab.
    
    <?php 
        $citaat = "Albert Einstein zei: \"Verbeelding is belangrijker dan kennis.\"";
        echo $citaat; // Dit toont het citaat met de juiste aanhalingstekens.
        
        $tekst = "Dit is de eerste regel.\n\tDit is de tweede regel met een tab.";
        echo $tekst; // Dit toont de tekst met een nieuwe regel en tab.
    ?>